(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    759886,      16597]
NotebookOptionsPosition[    716999,      15618]
NotebookOutlinePosition[    717352,      15634]
CellTagsIndexPosition[    717309,      15631]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"simple", " ", "pendulum"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "=", "9.8"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"grav", ".", " ", "constant"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"l", "=", "0.5"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"length", " ", "of", " ", "pendulum"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]0", "=", 
     RowBox[{"20", "*", 
      RowBox[{"\[Pi]", "/", "180"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"20", " ", "degrees"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[Omega]0", " ", "=", " ", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"starting", " ", "from", " ", "rest"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"\[Phi]", "=", "y"}], ";", "\[IndentingNewLine]", 
      RowBox[{"t", "=", "x"}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ode1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"g", "/", "l"}], ")"}]}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "\[Theta]0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", 
        "\[Omega]0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{"ode1", ",", "\[Theta]", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.4941618998598137`*^9, 3.4941619588657084`*^9}, 
   3.49416200170741*^9, {3.494162159839367*^9, 3.494162264850087*^9}, {
   3.4941622953964167`*^9, 3.494162314363269*^9}, {3.494162429878344*^9, 
   3.494162429931975*^9}, {3.494162689372713*^9, 3.494162709813946*^9}, {
   3.4941627527093143`*^9, 3.494162752876684*^9}, {3.494162969971979*^9, 
   3.494162984039895*^9}, {3.494163074268774*^9, 3.494163197175642*^9}, {
   3.4941632664519243`*^9, 3.494163266509802*^9}, {3.494163302388669*^9, 
   3.494163302618104*^9}, {3.494167125909374*^9, 3.494167127043168*^9}, {
   3.494178629013938*^9, 3.4941786941328583`*^9}, {3.494178743416378*^9, 
   3.494178753982154*^9}, {3.494178806776251*^9, 3.49417889255365*^9}, {
   3.577548930912209*^9, 3.577549058993216*^9}, {3.5784250975453444`*^9, 
   3.5784251120221443`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myplot1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"180", "/", "Pi"}], ")"}], " ", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "/.", "sol"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omega", "=", 
   SqrtBox[
    RowBox[{"(", 
     RowBox[{"g", "/", "l"}], ")"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.494162004524008*^9, 3.494162076852659*^9}, {
   3.494162433062894*^9, 3.494162433108081*^9}, {3.494162592059354*^9, 
   3.4941625983662167`*^9}, {3.494162757151064*^9, 3.494162787005321*^9}, {
   3.4941628547936563`*^9, 3.494162856894761*^9}, {3.494162887335985*^9, 
   3.494162892983869*^9}, {3.494162976794415*^9, 3.494163001498172*^9}, {
   3.494163071893292*^9, 3.4941630719595547`*^9}, {3.494163240196003*^9, 
   3.494163243631948*^9}, {3.494178674109873*^9, 3.494178699548072*^9}, {
   3.577549065982582*^9, 3.577549072700952*^9}, 3.577549145166576*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"approx", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"180", "/", "Pi"}], ")"}], " ", "\[Theta]0", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"omega", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myplot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"approx", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.4941620805077047`*^9, 3.494162130559312*^9}, {
  3.494162438686253*^9, 3.4941624388214483`*^9}, {3.49416276111087*^9, 
  3.4941627612842607`*^9}, {3.494163076540534*^9, 3.494163076603696*^9}, {
  3.4941632000470552`*^9, 3.494163201262197*^9}, {3.494163247872136*^9, 
  3.494163268710841*^9}, {3.494163305169607*^9, 3.494163305408745*^9}, {
  3.4941671378365726`*^9, 3.494167137896326*^9}, {3.494178681693411*^9, 
  3.494178704379784*^9}, {3.577549081756276*^9, 3.5775491266935997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{"{", 
    RowBox[{"myplot1", ",", "myplot2"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.494162134647728*^9, 3.4941621507573*^9}, {
  3.4941622413147984`*^9, 3.494162255928239*^9}, {3.494162609064744*^9, 
  3.494162610408478*^9}, {3.494163058283469*^9, 3.494163060738275*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\({myplot1, \\*GraphicsBox[List[List[List[], List[], \
List[Hue[0.67`, 0.6`, 0.6`], RGBColor[1, 0, 0], \
LineBox[List[Skeleton[1911]]]]]], List[Rule[AspectRatio, \
NCache[Power[GoldenRatio, -1], 0.6180339887498948`]], Rule[Axes, True], \
Rule[AxesOrigin, List[0, 0]], Rule[PlotRange, List[All, All]], \
Rule[PlotRangeClipping, True], Rule[PlotRangePadding, List[Automatic, \
Automatic]]]]}\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578425125824944*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"myplot1", ",", 
    GraphicsBox[{{}, {}, 
      {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwU23k4Vc8fB3A72bKvF3dx7cu997Qocj4KpVQSklBJoSJJklDfKEsRIvtS
IYmkRCSGKEuWNlGKZI/s+/Y7P/945jlzZuZ+5jjv1zygOJ2zPMnBxsZ2iZeN
7f/fUwOdeJjOyYaynWvEFwY1n8nmh8iX8Rf7zuaSVjFYe1cRRCaH4Zb0n/QL
8xgIxxQ/42+Pwes3zwRxjWGQiiKUuMmJeMjF0NuffmOgNeYcueaSjje3m7zp
asXgp3Da6vK3B/hRbtxMtxwD5ex1mxaXsvBDj/fK1D7E4Oy2i+5zSo/xU29s
3mWFYPDiS3fm9I48XKbuzIM2FwwWz5h3TrgU4NL7GvIdjDHIYO8MmzMpxNky
SpOMFDAwboqmz357jp822NkYNsmCwYSdVdNuRbgjZ89+wxoW3HZesZ9aeol7
BX7pc4lhwecl19hxpVK8LVknGpRZ4PNekTFWWIYLbl46zzXIBLm7XxpHd5Tj
10OXZ0/lMMFJAzj/ulTil+J5EvSUmMCx5Ncy7Y/wmxUpiVVfGfCl21ph2qQK
jx1J41YIY4BvnkDp5Ldq3PH8bxWBJl3YHdPPM5nxFu9ZyWhyougCybfKasKt
BreN6uH8fk4H0I5L42NLtbjA/KkdT5e0gPdHj+qoUj0uVeVu++OTOrSjNxdH
Buvxa+qhHySW1SA3O+Ht38IG/CjV4OM9shrs89p3dHjHB3z9caqKvL0K3FtX
dm/ApQX/Vlgc+/s+FcRS6jgmvn3Ch0sOaVhRJOF+Q/r5v0od+PJGyYr0DH40
nfBSo+t2B37MKObUne3rkalL459PCx34QcfQ2vf/RNEI55x12efv+OsP14/Y
BEghvW37toaFdOIlYzf4Uu2U0C0B5yn/6U48RsdjqhuR0a+Oy3mex3/iiUev
fHzdSkHBPlmKtvq/8IBVhUt2vTTUWrDMoTrWhassZTzp/KKKxPB1jkI63fiu
YjHnfTVqSF8ldmuIczfevKv6pNFTdRQ5/XjK72M3/sXg/WCnpyZ69WND6zTv
b/wen4MnxUwL/a6uzPMw/I3rTXadUJLXRhuiv550evIb5/3vWUbkEx3k6Hts
e+fv3zjpw5LoIzddFHL0r6KNTA+Of/N6fEKEgb5rs7eb3ejBjU+WqVeWMxCn
5O2it6978Cuq43uchZhIa1kqettkD1743+Y/YMdEVxu0djOP/sEt3jAlHQaZ
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
ddAoyvZQjk8FH5TTqM9WmDcyXdcrJVfx4U1e3kjRKI2eBfBCnlVj/SxOybPC
vNEd8V/X71o+hK/5PmMS84Z40kfrBfV8mMotSn45QSPW9Qf56xux/uXI1tIR
vP+DhPnhTXx4PePwyJvveP9nXsfutvBh5sSFZuk2vP87k+8fP/DBvu07Zyfm
oZu9qnbS7dhfSp46DBXSqPrvUPGSz3zI8M2OyUqjUa9Una73Vz4c35R6/XQ4
jSTUb5w438sHxnkpm3xXGnGEYUOV3/nQGP2uXXEZjSxgk9PwAB+WaM46UKxA
I++1VIXOEB/yVH0+3e2mUNaez6fD/vDh7Z7HUxnHMG8cffw3Z4IPiPG96yHm
jd6ks9s+iAhAIlVp3FiBQtxCc3rxTAGwZjNvtZ4hkdVzrRRPCQEovF0xONOW
RDtb/kw/Jy2Az1aTxc0zSZQ9nt3wa44ABN/P+V7dRaAX0pGLtecKYNGRJQuL
VAnUp77liq2KAHa8DfT2jBMinrFcwG1NAeT5/CifxxSg28f2ye3gC2Bn7imD
eEUu6lvqHH6MEMDghatab1dxEG/I9NdVWgCRaawAw31slOWm8KbNUABRECk2
UMpEmUb3z29eKYDe7PaXqUxddG1sQGPNFgGkOnCG3p+Zhz7fbU7Y6SaAHw2+
j8SPKSEdTzQt1kMAynfOsMX8FdCVtyc7q3wE8N7zZd+vZbIo7b7ghnGgAIz6
aGZjy+ST5F07BXqn8HmMjPtFZ4hCi+6GtPVn8Pnn9Mb1Ws0E5dYlsgHnBDBU
cOHSoZOScN5CcjDnogDa9z7s15suD0nMrHxWlgASh2sk6i1VoPHjKcaq2/i8
Z5949a9TA4WzB8953BWAaPzMF1Ub1CFRbPXBKwUCWPKm4PAZHS1IaP+6VK1c
AAV8O2L5D114df7l7cWVAlBy7/p8oWkBzLZ9oL7puQDWqSWe+FzMgPiSSJGz
LwUw4nu7OPUQC06kLKiY3SoAuwvfbmhiDnuxTlpP8EkAyamF7fvDeSApMZxh
1SGAE3mhZiHGfIgJrDge3S2ABg1pyzl3BHDcbpul6LAA+g+++rDpCgFXbFqd
PEYFAIvupWb/IqB4tZ1v1V8BjOVJPzY3JqFpRV0oe0oA/2k8XD4/FvPKslWn
YqcLgesdPKxcT4KUAbry/T8hxK5MPyGcQwGTMsyzmYXHm6xjbNZS4MTgNs2R
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
        "]]}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->True,
     AxesOrigin->{0, 0},
     PlotRange->{All, All},
     PlotRangeClipping->True,
     PlotRangePadding->{Automatic, Automatic}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.4941670604568167`*^9, 3.494167141595954*^9, 
  3.4941789048121853`*^9, 3.5775491591298018`*^9, 3.578425125824944*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "=", "9.8"}], ";", " ", 
    RowBox[{"l", "=", "0.5"}], ";", " ", 
    RowBox[{"omega", "=", 
     SqrtBox[
      RowBox[{"(", 
       RowBox[{"g", "/", "l"}], ")"}]]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"g", "/", "l"}], ")"}]}], "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "\[Theta]0"}], 
            ",", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", 
             "\[Omega]0"}]}], "}"}], ",", "\[Theta]", ",", " ", 
          RowBox[{"{", 
           RowBox[{"t", ",", " ", "0", ",", "20"}], "}"}]}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"180", "/", "Pi"}], ")"}], " ", "\[Theta]0", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"omega", "*", "t"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"180", "/", "Pi"}], ")"}], "*", " ", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], "/.", "result"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "Blue", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t (s)\>\"", ",", "\"\<\[Theta] (rad)\>\""}], "}"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "20"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "300"}], "}"}]}]}], "]"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "0.5", ",", "\"\<length (m)\>\""}], "}"}], ",", "0", 
     ",", "2", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]0", ",", 
       RowBox[{"20", "*", 
        RowBox[{"Pi", "/", "180"}]}], ",", "\"\<initial angle (rad)\>\""}], 
      "}"}], ",", ".1", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]0", ",", "0", ",", "\"\<initial speed (rad/s)\>\""}], 
      "}"}], ",", "0", ",", "10.", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.577478475599698*^9, 3.5774784997979183`*^9}, {
   3.577478534848688*^9, 3.577478567062739*^9}, 3.577490072664493*^9, {
   3.577502720630567*^9, 3.5775027514202127`*^9}, 3.5775030057285748`*^9, 
   3.577503078429886*^9, {3.577503108611413*^9, 3.577503166858922*^9}, {
   3.577549179281249*^9, 3.577549221102922*^9}, {3.577549268358193*^9, 
   3.577549405114224*^9}, {3.577549553049855*^9, 3.577549582375984*^9}, 
   3.577549627541086*^9, {3.57754973813801*^9, 3.577549829233026*^9}, {
   3.57754987411872*^9, 3.5775499131013613`*^9}, {3.577549955916011*^9, 
   3.5775499892251*^9}, {3.577550221132785*^9, 3.5775502214075537`*^9}, {
   3.577550744443714*^9, 3.5775508053235483`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`l$$ = 0.5, $CellContext`\[Theta]0$$ = 
    Rational[1, 9] Pi, $CellContext`\[Omega]0$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`l$$], 0.5, "length (m)"}, 0, 2}, {{
       Hold[$CellContext`\[Theta]0$$], Rational[1, 9] Pi, 
       "initial angle (rad)"}, 0.1, Rational[1, 2] Pi}, {{
       Hold[$CellContext`\[Omega]0$$], 0, "initial speed (rad/s)"}, 0, 10.}}, 
    Typeset`size$$ = {500., {148., 152.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`l$1716$$ =
     0, $CellContext`\[Theta]0$1717$$ = 0, $CellContext`\[Omega]0$1718$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`l$$ = 0.5, $CellContext`\[Theta]0$$ = 
        Rational[1, 9] Pi, $CellContext`\[Omega]0$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`l$$, $CellContext`l$1716$$, 0], 
        Hold[$CellContext`\[Theta]0$$, $CellContext`\[Theta]0$1717$$, 0], 
        Hold[$CellContext`\[Omega]0$$, $CellContext`\[Omega]0$1718$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`g = 9.8; $CellContext`l$$ = 
        0.5; $CellContext`omega = ($CellContext`g/$CellContext`l$$)^
         Rational[1, 2]; 
       Module[{$CellContext`result$ = 
          NDSolve[{
            Derivative[
              2][$CellContext`\[Theta]][$CellContext`t] == \
(-($CellContext`g/$CellContext`l$$)) Sin[
                $CellContext`\[Theta][$CellContext`t]], $CellContext`\[Theta][
              0] == $CellContext`\[Theta]0$$, 
             Derivative[1][$CellContext`\[Theta]][
              0] == $CellContext`\[Omega]0$$}, $CellContext`\[Theta], \
{$CellContext`t, 0, 20}]}, 
         Plot[{(180/Pi) $CellContext`\[Theta]0$$ 
           Cos[$CellContext`omega $CellContext`t], 
           
           ReplaceAll[(180/
             Pi) $CellContext`\[Theta][$CellContext`t], \
$CellContext`result$]}, {$CellContext`t, 0, 20}, 
          PlotStyle -> {{Blue}, {Dashed, Red}}, PlotRange -> All, 
          AxesLabel -> {"t (s)", "\[Theta] (rad)"}, 
          PlotRange -> {{0, 20}, {-20, 20}}, ImageSize -> {500, 300}]]), 
      "Specifications" :> {{{$CellContext`l$$, 0.5, "length (m)"}, 0, 2, 
         Appearance -> 
         "Labeled"}, {{$CellContext`\[Theta]0$$, Rational[1, 9] Pi, 
          "initial angle (rad)"}, 0.1, Rational[1, 2] Pi, Appearance -> 
         "Labeled"}, {{$CellContext`\[Omega]0$$, 0, "initial speed (rad/s)"}, 
         0, 10., Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{549., {222., 227.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.577503168951933*^9, 3.5775031800122957`*^9}, 
   3.5775496308879547`*^9, {3.577549817433275*^9, 3.577549831097909*^9}, 
   3.577549914925475*^9, {3.57754995775905*^9, 3.577549989572948*^9}, 
   3.577550763233276*^9, 3.577550806163776*^9, 3.578425146916144*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "=", "9.8"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"grav", ".", " ", "constant"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"vt", "=", "25"}], "\[IndentingNewLine]", 
 RowBox[{"V", "=", "30"}], "\[IndentingNewLine]", 
 RowBox[{"th", "=", 
  RowBox[{"50", " ", 
   RowBox[{"(", 
    RowBox[{"Pi", "/", "180"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ode1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "g"}], " ", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}], "/", 
        RowBox[{"vt", "^", "2"}]}]}], ")"}], " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ode2", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"-", "g"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "'"}], "[", "t", "]"}], "/", 
          RowBox[{"vt", "^", "2"}]}], ")"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}], 
      ")"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode1", ",", "ode2", ",", " ", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "==", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], "==", 
       RowBox[{"V", " ", 
        RowBox[{"Cos", "[", "th", "]"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "==", "2"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "==", 
       RowBox[{"V", " ", 
        RowBox[{"Sin", "[", "th", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}]}], "Input"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.578425640820228*^9}],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{3.578425640820228*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"5", " ", "\[Pi]"}], "18"]], "Output",
 CellChangeTimes->{3.578425640820228*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", "0.015680000000000003`"}], " ", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.578425640820228*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", "9.8`"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["1", "625"], " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]]}]}], ")"}]}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.578425640820228*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
       "]"}],
      False,
      Editable->False]}], ",", 
    RowBox[{"y", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
       "]"}],
      False,
      Editable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.578425640851428*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "60"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "30"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 60}, {0, 30}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5784256603983536`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.57842619056494*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"g", "=", "9.8"}], ";", 
              RowBox[{"x0", "=", "0"}], ";", 
              RowBox[{"y0", "=", "2"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Module", "[", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"result", " ", "=", " ", 
                 RowBox[{"NDSolve", "[", 
                  RowBox[{"ode1", ",", "ode2", ",", " ", 
                   RowBox[{
                    RowBox[{"x", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"V", " ", 
                    RowBox[{"Cos", "[", "th", "]"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"y", "[", "0", "]"}], "\[Equal]", "y0"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
                    RowBox[{"V", " ", 
                    RowBox[{"Sin", "[", "th", "]"}]}]}]}]}]}]}]}]}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "result"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x0", "+", 
           RowBox[{"V", " ", "t", " ", 
            RowBox[{"Cos", "[", "th", "]"}]}]}], ",", 
          RowBox[{"y0", "+", 
           RowBox[{"V", "  ", 
            RowBox[{"Sin", "[", 
             RowBox[{"th", " ", "t"}], "]"}]}], "-", 
           RowBox[{"0.5", " ", "g", " ", 
            RowBox[{"t", "^", "2"}]}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x (m)\>\"", ",", "\"\<y (m)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "50"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"500", ",", "300"}], "}"}]}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"V", ",", "60", ",", "\"\<initial velocity (m/s)\>\""}], "}"}], 
     ",", "0", ",", "200", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"th", ",", " ", 
       RowBox[{"Pi", "/", "6"}], ",", "\"\<angle (rad)\>\""}], "}"}], ",", 
     ".1", ",", 
     RowBox[{"Pi", "/", "2"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vt", ",", "35", ",", "\"\<terminal velocity (m/s)\>\""}], 
      "}"}], ",", "0", ",", "100", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tf", ",", "3", ",", "\"\<time (s)\>\""}], "}"}], ",", "0.1", 
     ",", "100", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], "]"}]],
  "Input",
 CellChangeTimes->{{3.5784258161647053`*^9, 3.5784258276619053`*^9}, {
   3.5784259300447054`*^9, 3.578425953943906*^9}, {3.5784259962043056`*^9, 
   3.5784259975927057`*^9}, {3.5784260693521633`*^9, 3.5784260787278233`*^9}, 
   3.578426112424039*^9, {3.57842617338923*^9, 3.5784261843405*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`tf$$ = 3, $CellContext`th$$ = 
    0.3235610416728243, $CellContext`V$$ = 60, $CellContext`vt$$ = 12., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`V$$], 60, "initial velocity (m/s)"}, 0, 200}, {{
       Hold[$CellContext`th$$], Rational[1, 6] Pi, "angle (rad)"}, 0.1, 
      Rational[1, 2] Pi}, {{
       Hold[$CellContext`vt$$], 35, "terminal velocity (m/s)"}, 0, 100}, {{
       Hold[$CellContext`tf$$], 3, "time (s)"}, 0.1, 100}}, Typeset`size$$ = {
    500., {148., 152.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`V$63325$$ = 
    0, $CellContext`th$63326$$ = 0, $CellContext`vt$63327$$ = 
    0, $CellContext`tf$63328$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`tf$$ = 3, $CellContext`th$$ = 
        Rational[1, 6] Pi, $CellContext`V$$ = 60, $CellContext`vt$$ = 35}, 
      "ControllerVariables" :> {
        Hold[$CellContext`V$$, $CellContext`V$63325$$, 0], 
        Hold[$CellContext`th$$, $CellContext`th$63326$$, 0], 
        Hold[$CellContext`vt$$, $CellContext`vt$63327$$, 0], 
        Hold[$CellContext`tf$$, $CellContext`tf$63328$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`g = 9.8; $CellContext`x0 = 0; $CellContext`y0 = 
        2; Module[{$CellContext`result$ = 
          NDSolve[{
            Derivative[
              2][$CellContext`x][$CellContext`t] == ((-$CellContext`g) (
                Derivative[
                 1][$CellContext`x][$CellContext`t]/$CellContext`vt$$^2)) 
              Sqrt[Derivative[1][$CellContext`x][$CellContext`t]^2 + 
                Derivative[1][$CellContext`y][$CellContext`t]^2], 
             Derivative[
              2][$CellContext`y][$CellContext`t] == (-$CellContext`g) (
               1 + (Derivative[
                  1][$CellContext`y][$CellContext`t]/$CellContext`vt$$^2) 
                Sqrt[Derivative[1][$CellContext`x][$CellContext`t]^2 + 
                  Derivative[
                    1][$CellContext`y][$CellContext`t]^2]), $CellContext`x[
              0] == $CellContext`x0, 
             Derivative[1][$CellContext`x][0] == $CellContext`V$$ 
              Cos[$CellContext`th$$], $CellContext`y[0] == $CellContext`y0, 
             Derivative[1][$CellContext`y][0] == $CellContext`V$$ 
              Sin[$CellContext`th$$]}, {$CellContext`x, $CellContext`y}, \
{$CellContext`t, 0, $CellContext`tf$$}]}, 
         ParametricPlot[{
           Evaluate[
            ReplaceAll[{
              $CellContext`x[$CellContext`t], 
              $CellContext`y[$CellContext`t]}, $CellContext`result$]], \
{$CellContext`x0 + $CellContext`V$$ $CellContext`t 
             Cos[$CellContext`th$$], $CellContext`y0 + $CellContext`V$$ 
             Sin[$CellContext`th$$ $CellContext`t] - 
            0.5 $CellContext`g $CellContext`t^2}}, {$CellContext`t, 
           0, $CellContext`tf$$}, AxesLabel -> {"x (m)", "y (m)"}, 
          PlotRange -> {{0, 100}, {0, 50}}, ImageSize -> {500, 300}]]), 
      "Specifications" :> {{{$CellContext`V$$, 60, "initial velocity (m/s)"}, 
         0, 200, Appearance -> 
         "Labeled"}, {{$CellContext`th$$, Rational[1, 6] Pi, "angle (rad)"}, 
         0.1, Rational[1, 2] Pi, Appearance -> 
         "Labeled"}, {{$CellContext`vt$$, 35, "terminal velocity (m/s)"}, 0, 
         100, Appearance -> "Labeled"}, {{$CellContext`tf$$, 3, "time (s)"}, 
         0.1, 100, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{549., {235., 240.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5784257508319054`*^9, 3.578425957360306*^9, 
  3.5784259985131054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426008512706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085283055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085283055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085283055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085283055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085439053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085439053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085595055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085595055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085595055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085595055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085595055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260085595055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426008668706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426008668706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426008668706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426008668706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426008668706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260086843057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260086999054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260086999054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260086999054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260086999054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260086999054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260086999054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260086999054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260088715057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260088715057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260088715057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260088715057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426008887106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426008887106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260089027057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260089027057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260089027057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260089027057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260089027057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260089027057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260089027057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009027506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009027506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009027506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009027506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009027506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260090431056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260090431056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260090587053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260090587053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260090587053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260090587053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260090587053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260090587053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092615056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092615056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092615056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092615056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092615056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092771053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092771053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092771053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092927055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092927055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092927055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092927055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260092927055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095579057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095579057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095579057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095579057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095579057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095891056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095891056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095891056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095891056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095891056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095891056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095891056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260095891056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260097295055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260097295055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260097295055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260097295055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260097295055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009760706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009760706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009760706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009760706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009760706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009760706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009760706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260097763057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260099479055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260099479055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260099479055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260099479055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260099479055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260099635057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260099635057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009979106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009979106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009979106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009979106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009979106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426009979106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260101663055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260101663055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260101663055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260101663055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260101663055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260101819057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260101819057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260101819057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010197506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010197506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010197506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010197506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010197506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010415906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010415906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010415906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010415906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010415906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260104471054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260104471054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260104471054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260104471054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260104471054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260104471054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260104471054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260104471054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010634306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010634306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010634306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010634306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010634306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260106655054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260106655054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260106655054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260106655054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260106655054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260106655054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260106655054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260106655054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010852706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010852706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010852706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010852706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426010852706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260108683057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260108683057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260108683057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260108839054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260108839054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260108839054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260108839054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260108839054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110087056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110087056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110087056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110087056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110087056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110243053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110243053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110243053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110243053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110399055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110399055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110399055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260110399055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260111959057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260111959057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260111959057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260111959057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426011211506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260112271056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260112271056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260112271056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260112271056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260112271056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260112427053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260112427053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260112427053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260114143057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260114143057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260114143057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260114143057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260114143057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426011429906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426011429906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426011429906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260114455056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260114455056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260114455056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260114455056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260114455056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260115859056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260115859056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260115859056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260115859056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260115859056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260116015053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260116015053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260116015053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260116015053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260116015053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260116015053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260116015053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260116015053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117419057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117419057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117419057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117419057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117419057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117575054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117575054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117575054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117575054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117575054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117575054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117731056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260117731056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119603057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119603057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119603057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119603057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119603057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119759054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119759054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119759054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119759054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119759054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119759054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119759054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260119915056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260121943054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260121943054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260121943054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260121943054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260121943054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012225506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012225506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012225506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012225506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012225506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012225506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012225506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260122411056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124283056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124283056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124283056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124283056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124283056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012443906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012443906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124595056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124595056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124595056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124595056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124595056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260124595056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260126467056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012662306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012662306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012662306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012662306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260126779056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260126779056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260126935053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260126935053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260126935053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260126935053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260126935053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260126935053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012880706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426012880706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260128963056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260128963056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260128963056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260129119053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260129119053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260129119053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260129119053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260129119053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260129119053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260129119053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260129119053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260130679054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260130679054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260130679054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260130835056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260130835056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013099106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013099106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013099106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013099106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260131147056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260131147056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260131147056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260131147056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133019056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133019056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133019056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133019056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133019056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013317506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013317506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133331056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133331056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133331056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133331056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133331056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260133331056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260135203056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013535906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013535906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013535906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013535906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260135515056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260135515056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260135515056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260135515056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260135515056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260135515056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260135515056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260135515056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260136919055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137075057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137075057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137075057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137075057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137231054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137231054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137387056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137387056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137387056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137387056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137387056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260137387056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260139415054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260139415054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260139415054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260139415054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260139415054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260139571056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260139571056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260139571056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013972706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013972706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013972706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013972706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426013972706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260141755056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260141755056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260141755056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260141755056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260141755056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426014191106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426014191106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426014191106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426014191106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260142067056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260142067056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260142067056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260142067056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260143939056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260143939056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260143939056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260143939056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260143939056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426014409506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426014409506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426014409506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426014409506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260144251056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260144251056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260144251056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260144251056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426014549906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426014549906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145655055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145655055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145655055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145811057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145811057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145811057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145811057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145811057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145811057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145811057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260145811057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147215056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147215056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147215056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147215056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147215056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147371054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147371054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147371054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147371054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147371054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147527056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147527056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260147527056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260148775053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260148775053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260148775053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260148775053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260148931055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260148931055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260149087057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260149087057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260149087057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260149087057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260149087057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260149087057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260149087057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260150491056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260150491056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260150491056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260150491056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260150491056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426015064706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426015064706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426015064706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426015064706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260150803056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260150803056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260150803056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260150803056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426015205106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426015205106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152207055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152207055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152207055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152363057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152363057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152363057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152363057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152363057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152363057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152363057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260152363057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260153923054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260153923054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260153923054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260153923054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260153923054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260154391055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260154391055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260154391055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260154391055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260154391055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260154391055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260154391055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260154391055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169679055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169679055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169679055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169679055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169679055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169835052`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169835052`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169835052`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169835052`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169991055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169991055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169991055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260169991055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018340706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018340706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018340706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018340706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018340706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260183563056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260183563056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260183719053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260183719053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260183719053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260183719053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260183719053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260183719053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260186059055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260186059055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260186059055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260186059055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260186059055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018637106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018637106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018637106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018637106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018637106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018637106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018637106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018637106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260187619057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018777506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018777506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018777506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018777506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260187931056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260187931056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260188087053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260188087053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260188087053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260188087053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260188087053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260188087053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260189647055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260189647055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260189647055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260189647055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260189803057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018995906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018995906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018995906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018995906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018995906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018995906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018995906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426018995906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260193703055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260193859053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260193859053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260193859053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260193859053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260194015055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260194015055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260194015055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260194015055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260194015055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260194015055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260194015055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260194015055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195419054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195419054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195419054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195419054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195419054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195575056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195575056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195575056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195575056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195575056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260195575056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426019573106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426019573106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426019729106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426019729106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426019729106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426019729106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426019729106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260197447057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260197603054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260197603054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260197603054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260197603054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260197603054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260197603054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260197603054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199007053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199007053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199007053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199007053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199163055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199163055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199163055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199319057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199319057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199319057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199319057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199319057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260199319057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020087906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020087906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020087906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020087906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020087906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260201191053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260201191053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260201191053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260201191053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260201191053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260201191053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260201191053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260201191053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202595053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202595053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202595053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202595053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202595053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202751055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202751055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202751055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202907057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202907057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202907057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202907057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260202907057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260204311056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020446706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020446706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020446706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020446706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260204623055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260204623055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260204779053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260204779053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260204779053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260204779053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260204779053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260204779053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020602706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206183057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206183057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206183057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206183057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206339054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206339054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206339054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206339054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206339054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206339054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206339054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260206495056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260207899055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260207899055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260208055058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260208055058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260208055058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020821106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020821106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426020821106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260208367057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260208367057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260208367057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260208367057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260208367057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260209771056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260209771056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260209771056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260209771056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260209771056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260210083055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260210083055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260210083055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260210083055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260210083055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260210239058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260210239058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260210239058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212111053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212111053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212111053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212111053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212111053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212423058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212423058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212423058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212423058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212423058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212423058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212423058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260212423058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260214607058`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260214763055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260214763055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260214763055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260214763055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260215075054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260215075054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260215075054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260215075054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260215075054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260215075054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260215231056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260215231056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217259054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217259054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217259054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217415056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217415056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426021757106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426021757106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217727056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217727056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217727056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217727056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217727056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260217727056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260219599056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260219599056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260219599056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260219599056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260219599056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426021975506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426021975506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426021975506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426021975506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260219911056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260219911056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260219911056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260219911056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022193906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022193906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022193906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022193906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022193906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260222095056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260222095056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260222095056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260222095056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260222095056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260222095056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260222251053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260222251053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223499055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223499055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223499055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223499055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223499055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223655057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223655057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223655057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223655057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223655057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223811054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223811054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260223811054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225215054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225215054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225215054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225215054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225215054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225371056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225371056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225371056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225371056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225371056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225371056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225371056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260225371056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260226775055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260226775055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260226775055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260226931057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260226931057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260226931057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022708706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022708706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022708706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022708706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022708706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022708706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022708706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022849106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022849106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022849106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022849106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426022849106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260228647056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260228647056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260228647056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260228647056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260228803053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260228803053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260228803053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260228803053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230207057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230207057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230207057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230207057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230207057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230363054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230363054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230363054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230363054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230363054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230363054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230363054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260230519056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232235055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232235055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232391057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232391057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232391057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232547054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232547054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232547054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232547054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232547054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232547054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232547054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260232703056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260233951054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260233951054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260233951054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260233951054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260233951054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260234107056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260234107056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023426306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023426306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023426306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023426306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023426306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023426306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023582306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023582306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023582306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023582306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023582306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260235979056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260235979056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260235979056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260235979056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260235979056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260235979056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260236135054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260236135054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237539053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237539053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237539053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237539053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237539053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237695055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237695055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237851057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237851057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237851057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237851057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237851057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260237851057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260239255056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260239255056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023941106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023941106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426023941106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260239567056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260239567056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260239567056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260239567056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260239567056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260239567056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260239567056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260239567056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260240971055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260240971055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241127057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241127057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241127057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241127057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241283054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241283054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241283054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241283054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241283054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241283054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260241283054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260242961054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260242981057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260243001056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260243011055`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260243031054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260243181057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260243191056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024321106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024323106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260243251057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260243261056`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024328106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024330106*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260244701133`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024471113*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260244731135`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260244741135`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024475114*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260244881153`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024490115*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260244921155`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024494116*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260244961157`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024497116*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024498116*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260245011168`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.57842602464013*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260246421304`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260246441307`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024645131*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260246461306`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260246601324`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260246621323`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024664133*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260246651325`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260246681333`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024669133*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260246711335`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024673134*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260248131475`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024814148*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024816148*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024817148*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024819148*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260248321495`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260248341494`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.57842602483615*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.57842602483815*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260248401504`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260248411503`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260248431506`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024845151*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260249851646`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024987165*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024988165*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024990165*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426024991165*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025005167*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025007167*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025009167*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025010167*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025012168*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260250131674`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260250151677`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025018168*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025158182*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260251601825`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "inf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input matrix contains an infinite entry. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/inf\\\", \
ButtonNote -> \\\"RowReduce::inf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260251611824`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvmm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system using a mass matrix method. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ntdvmm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260251631823`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered non-numerical value for a derivative at \
\[NoBreak]\\!\\(t\\)\[NoBreak] == \[NoBreak]\\!\\(0.`\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnum\\\", \
ButtonNote -> \\\"NDSolve::ndnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260251641827`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.`\\)\[NoBreak] cannot be used as a \
variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025177184*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({0.`, 0, \
3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025179184*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260251811843`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] \\(\\(30\\\\ \
\\@3\\)\\)\\)\\), \\(\\(\\(\\(y[0]\\)\\) \[Equal] 2\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]]\
\\)\\)[0]\\)\\) \[Equal] 30\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \
\\(\\({0.00006122448979591836`, 0, 3}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260251831846`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.00006122448979591836`\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025186185*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260251871853`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, \
None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] ComplexInfinity\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.00006122448979591836`]\\)\\) \[Equal] \
ComplexInfinity\\)\\), \\(\\(\\(\\(x[0.`]\\)\\) \[Equal] 0.`\\)\\), \\(\\(\\(\
\\(\\(\\(\\*SuperscriptBox[\\\"x\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] \
51.96152422706631`\\)\\), \\(\\(\\(\\(y[0.`]\\)\\) \[Equal] 2.`\\)\\), \\(\\(\
\\(\\(\\(\\(\\*SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.`]\\)\\) \[Equal] 30.`\\)\\)}\\)\\), \
\\(\\({x, y}\\)\\), \\(\\({0.00006122448979591836`, 0.`, \
3.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578426025189185*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784260251911855`*^9}]
}, Open  ]]
},
WindowSize->{799, 739},
WindowMargins->{{Automatic, 66}, {27, Automatic}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 22, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 2662, 62, 163, "Input"],
Cell[3210, 84, 1272, 29, 54, "Input"],
Cell[4485, 115, 1142, 25, 43, "Input"],
Cell[CellGroupData[{
Cell[5652, 144, 364, 7, 43, "Input"],
Cell[6019, 153, 853, 16, 66, "Message"],
Cell[6875, 171, 39942, 660, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46854, 836, 4320, 109, 196, "Input"],
Cell[51177, 947, 3678, 70, 466, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54892, 1022, 2524, 80, 133, "Input"],
Cell[57419, 1104, 71, 1, 27, "Output"],
Cell[57493, 1107, 71, 1, 27, "Output"],
Cell[57567, 1110, 118, 3, 47, "Output"],
Cell[57688, 1115, 698, 22, 42, "Output"],
Cell[58389, 1139, 826, 26, 47, "Output"],
Cell[59218, 1167, 687, 24, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59942, 1196, 652, 21, 43, "Input"],
Cell[60597, 1219, 9259, 156, 206, "Output"]
}, Open  ]],
Cell[69871, 1378, 67, 1, 27, "Input"],
Cell[CellGroupData[{
Cell[69963, 1383, 4147, 107, 193, "Input"],
Cell[74113, 1492, 4447, 83, 492, "Output"],
Cell[78563, 1577, 447, 10, 40, "Message"],
Cell[79013, 1589, 449, 10, 40, "Message"],
Cell[79465, 1601, 423, 9, 21, "Message"],
Cell[79891, 1612, 500, 10, 39, "Message"],
Cell[80394, 1624, 506, 10, 21, "Message"],
Cell[80903, 1636, 449, 10, 21, "Message"],
Cell[81355, 1648, 1305, 22, 66, "Message"],
Cell[82663, 1672, 469, 10, 21, "Message"],
Cell[83135, 1684, 1367, 23, 88, "Message"],
Cell[84505, 1709, 469, 10, 21, "Message"],
Cell[84977, 1721, 533, 11, 21, "Message"],
Cell[85513, 1734, 1380, 23, 77, "Message"],
Cell[86896, 1759, 535, 11, 21, "Message"],
Cell[87434, 1772, 447, 10, 40, "Message"],
Cell[87884, 1784, 447, 10, 40, "Message"],
Cell[88334, 1796, 421, 9, 21, "Message"],
Cell[88758, 1807, 498, 10, 39, "Message"],
Cell[89259, 1819, 504, 10, 21, "Message"],
Cell[89766, 1831, 449, 10, 21, "Message"],
Cell[90218, 1843, 1305, 22, 66, "Message"],
Cell[91526, 1867, 469, 10, 21, "Message"],
Cell[91998, 1879, 1367, 23, 88, "Message"],
Cell[93368, 1904, 469, 10, 21, "Message"],
Cell[93840, 1916, 533, 11, 21, "Message"],
Cell[94376, 1929, 1380, 23, 77, "Message"],
Cell[95759, 1954, 535, 11, 21, "Message"],
Cell[96297, 1967, 449, 10, 40, "Message"],
Cell[96749, 1979, 449, 10, 40, "Message"],
Cell[97201, 1991, 423, 9, 21, "Message"],
Cell[97627, 2002, 500, 10, 39, "Message"],
Cell[98130, 2014, 504, 10, 21, "Message"],
Cell[98637, 2026, 447, 10, 21, "Message"],
Cell[99087, 2038, 1305, 22, 66, "Message"],
Cell[100395, 2062, 469, 10, 21, "Message"],
Cell[100867, 2074, 1367, 23, 88, "Message"],
Cell[102237, 2099, 469, 10, 21, "Message"],
Cell[102709, 2111, 533, 11, 21, "Message"],
Cell[103245, 2124, 1380, 23, 77, "Message"],
Cell[104628, 2149, 535, 11, 21, "Message"],
Cell[105166, 2162, 447, 10, 40, "Message"],
Cell[105616, 2174, 447, 10, 40, "Message"],
Cell[106066, 2186, 421, 9, 21, "Message"],
Cell[106490, 2197, 498, 10, 39, "Message"],
Cell[106991, 2209, 504, 10, 21, "Message"],
Cell[107498, 2221, 449, 10, 21, "Message"],
Cell[107950, 2233, 1305, 22, 66, "Message"],
Cell[109258, 2257, 469, 10, 21, "Message"],
Cell[109730, 2269, 1367, 23, 88, "Message"],
Cell[111100, 2294, 469, 10, 21, "Message"],
Cell[111572, 2306, 533, 11, 21, "Message"],
Cell[112108, 2319, 1380, 23, 77, "Message"],
Cell[113491, 2344, 535, 11, 21, "Message"],
Cell[114029, 2357, 449, 10, 40, "Message"],
Cell[114481, 2369, 449, 10, 40, "Message"],
Cell[114933, 2381, 423, 9, 21, "Message"],
Cell[115359, 2392, 500, 10, 39, "Message"],
Cell[115862, 2404, 506, 10, 21, "Message"],
Cell[116371, 2416, 449, 10, 21, "Message"],
Cell[116823, 2428, 1305, 22, 66, "Message"],
Cell[118131, 2452, 469, 10, 21, "Message"],
Cell[118603, 2464, 1367, 23, 88, "Message"],
Cell[119973, 2489, 469, 10, 21, "Message"],
Cell[120445, 2501, 533, 11, 21, "Message"],
Cell[120981, 2514, 1380, 23, 77, "Message"],
Cell[122364, 2539, 535, 11, 21, "Message"],
Cell[122902, 2552, 449, 10, 40, "Message"],
Cell[123354, 2564, 449, 10, 40, "Message"],
Cell[123806, 2576, 423, 9, 21, "Message"],
Cell[124232, 2587, 500, 10, 39, "Message"],
Cell[124735, 2599, 506, 10, 21, "Message"],
Cell[125244, 2611, 449, 10, 21, "Message"],
Cell[125696, 2623, 1305, 22, 66, "Message"],
Cell[127004, 2647, 469, 10, 21, "Message"],
Cell[127476, 2659, 1367, 23, 88, "Message"],
Cell[128846, 2684, 469, 10, 21, "Message"],
Cell[129318, 2696, 533, 11, 21, "Message"],
Cell[129854, 2709, 1380, 23, 77, "Message"],
Cell[131237, 2734, 535, 11, 21, "Message"],
Cell[131775, 2747, 449, 10, 40, "Message"],
Cell[132227, 2759, 449, 10, 40, "Message"],
Cell[132679, 2771, 423, 9, 21, "Message"],
Cell[133105, 2782, 500, 10, 39, "Message"],
Cell[133608, 2794, 506, 10, 21, "Message"],
Cell[134117, 2806, 447, 10, 21, "Message"],
Cell[134567, 2818, 1303, 22, 66, "Message"],
Cell[135873, 2842, 467, 10, 21, "Message"],
Cell[136343, 2854, 1365, 23, 88, "Message"],
Cell[137711, 2879, 467, 10, 21, "Message"],
Cell[138181, 2891, 531, 11, 21, "Message"],
Cell[138715, 2904, 1378, 23, 77, "Message"],
Cell[140096, 2929, 535, 11, 21, "Message"],
Cell[140634, 2942, 449, 10, 40, "Message"],
Cell[141086, 2954, 449, 10, 40, "Message"],
Cell[141538, 2966, 423, 9, 21, "Message"],
Cell[141964, 2977, 500, 10, 39, "Message"],
Cell[142467, 2989, 506, 10, 21, "Message"],
Cell[142976, 3001, 449, 10, 21, "Message"],
Cell[143428, 3013, 1305, 22, 66, "Message"],
Cell[144736, 3037, 467, 10, 21, "Message"],
Cell[145206, 3049, 1365, 23, 88, "Message"],
Cell[146574, 3074, 467, 10, 21, "Message"],
Cell[147044, 3086, 531, 11, 21, "Message"],
Cell[147578, 3099, 1378, 23, 77, "Message"],
Cell[148959, 3124, 533, 11, 21, "Message"],
Cell[149495, 3137, 449, 10, 40, "Message"],
Cell[149947, 3149, 449, 10, 40, "Message"],
Cell[150399, 3161, 423, 9, 21, "Message"],
Cell[150825, 3172, 500, 10, 39, "Message"],
Cell[151328, 3184, 506, 10, 21, "Message"],
Cell[151837, 3196, 449, 10, 21, "Message"],
Cell[152289, 3208, 1305, 22, 66, "Message"],
Cell[153597, 3232, 469, 10, 21, "Message"],
Cell[154069, 3244, 1365, 23, 88, "Message"],
Cell[155437, 3269, 467, 10, 21, "Message"],
Cell[155907, 3281, 531, 11, 21, "Message"],
Cell[156441, 3294, 1378, 23, 77, "Message"],
Cell[157822, 3319, 533, 11, 21, "Message"],
Cell[158358, 3332, 447, 10, 40, "Message"],
Cell[158808, 3344, 447, 10, 40, "Message"],
Cell[159258, 3356, 421, 9, 21, "Message"],
Cell[159682, 3367, 498, 10, 39, "Message"],
Cell[160183, 3379, 504, 10, 21, "Message"],
Cell[160690, 3391, 449, 10, 21, "Message"],
Cell[161142, 3403, 1305, 22, 66, "Message"],
Cell[162450, 3427, 469, 10, 21, "Message"],
Cell[162922, 3439, 1367, 23, 88, "Message"],
Cell[164292, 3464, 469, 10, 21, "Message"],
Cell[164764, 3476, 533, 11, 21, "Message"],
Cell[165300, 3489, 1380, 23, 77, "Message"],
Cell[166683, 3514, 535, 11, 21, "Message"],
Cell[167221, 3527, 447, 10, 40, "Message"],
Cell[167671, 3539, 447, 10, 40, "Message"],
Cell[168121, 3551, 421, 9, 21, "Message"],
Cell[168545, 3562, 498, 10, 39, "Message"],
Cell[169046, 3574, 504, 10, 21, "Message"],
Cell[169553, 3586, 449, 10, 21, "Message"],
Cell[170005, 3598, 1305, 22, 66, "Message"],
Cell[171313, 3622, 469, 10, 21, "Message"],
Cell[171785, 3634, 1367, 23, 88, "Message"],
Cell[173155, 3659, 469, 10, 21, "Message"],
Cell[173627, 3671, 533, 11, 21, "Message"],
Cell[174163, 3684, 1380, 23, 77, "Message"],
Cell[175546, 3709, 535, 11, 21, "Message"],
Cell[176084, 3722, 447, 10, 40, "Message"],
Cell[176534, 3734, 447, 10, 40, "Message"],
Cell[176984, 3746, 421, 9, 21, "Message"],
Cell[177408, 3757, 498, 10, 39, "Message"],
Cell[177909, 3769, 504, 10, 21, "Message"],
Cell[178416, 3781, 449, 10, 21, "Message"],
Cell[178868, 3793, 1305, 22, 66, "Message"],
Cell[180176, 3817, 469, 10, 21, "Message"],
Cell[180648, 3829, 1367, 23, 88, "Message"],
Cell[182018, 3854, 469, 10, 21, "Message"],
Cell[182490, 3866, 533, 11, 21, "Message"],
Cell[183026, 3879, 1380, 23, 77, "Message"],
Cell[184409, 3904, 535, 11, 21, "Message"],
Cell[184947, 3917, 449, 10, 40, "Message"],
Cell[185399, 3929, 449, 10, 40, "Message"],
Cell[185851, 3941, 423, 9, 21, "Message"],
Cell[186277, 3952, 500, 10, 39, "Message"],
Cell[186780, 3964, 506, 10, 21, "Message"],
Cell[187289, 3976, 449, 10, 21, "Message"],
Cell[187741, 3988, 1305, 22, 66, "Message"],
Cell[189049, 4012, 469, 10, 21, "Message"],
Cell[189521, 4024, 1367, 23, 88, "Message"],
Cell[190891, 4049, 469, 10, 21, "Message"],
Cell[191363, 4061, 533, 11, 21, "Message"],
Cell[191899, 4074, 1380, 23, 77, "Message"],
Cell[193282, 4099, 535, 11, 21, "Message"],
Cell[193820, 4112, 449, 10, 40, "Message"],
Cell[194272, 4124, 449, 10, 40, "Message"],
Cell[194724, 4136, 423, 9, 21, "Message"],
Cell[195150, 4147, 500, 10, 39, "Message"],
Cell[195653, 4159, 504, 10, 21, "Message"],
Cell[196160, 4171, 449, 10, 21, "Message"],
Cell[196612, 4183, 1305, 22, 66, "Message"],
Cell[197920, 4207, 469, 10, 21, "Message"],
Cell[198392, 4219, 1367, 23, 88, "Message"],
Cell[199762, 4244, 469, 10, 21, "Message"],
Cell[200234, 4256, 533, 11, 21, "Message"],
Cell[200770, 4269, 1380, 23, 77, "Message"],
Cell[202153, 4294, 535, 11, 21, "Message"],
Cell[202691, 4307, 449, 10, 40, "Message"],
Cell[203143, 4319, 449, 10, 40, "Message"],
Cell[203595, 4331, 423, 9, 21, "Message"],
Cell[204021, 4342, 500, 10, 39, "Message"],
Cell[204524, 4354, 506, 10, 21, "Message"],
Cell[205033, 4366, 447, 10, 21, "Message"],
Cell[205483, 4378, 1303, 22, 66, "Message"],
Cell[206789, 4402, 467, 10, 21, "Message"],
Cell[207259, 4414, 1367, 23, 88, "Message"],
Cell[208629, 4439, 469, 10, 21, "Message"],
Cell[209101, 4451, 533, 11, 21, "Message"],
Cell[209637, 4464, 1380, 23, 77, "Message"],
Cell[211020, 4489, 535, 11, 21, "Message"],
Cell[211558, 4502, 449, 10, 40, "Message"],
Cell[212010, 4514, 449, 10, 40, "Message"],
Cell[212462, 4526, 423, 9, 21, "Message"],
Cell[212888, 4537, 500, 10, 39, "Message"],
Cell[213391, 4549, 506, 10, 21, "Message"],
Cell[213900, 4561, 449, 10, 21, "Message"],
Cell[214352, 4573, 1305, 22, 66, "Message"],
Cell[215660, 4597, 469, 10, 21, "Message"],
Cell[216132, 4609, 1367, 23, 88, "Message"],
Cell[217502, 4634, 469, 10, 21, "Message"],
Cell[217974, 4646, 533, 11, 21, "Message"],
Cell[218510, 4659, 1380, 23, 77, "Message"],
Cell[219893, 4684, 535, 11, 21, "Message"],
Cell[220431, 4697, 449, 10, 40, "Message"],
Cell[220883, 4709, 449, 10, 40, "Message"],
Cell[221335, 4721, 423, 9, 21, "Message"],
Cell[221761, 4732, 500, 10, 39, "Message"],
Cell[222264, 4744, 506, 10, 21, "Message"],
Cell[222773, 4756, 449, 10, 21, "Message"],
Cell[223225, 4768, 1305, 22, 66, "Message"],
Cell[224533, 4792, 469, 10, 21, "Message"],
Cell[225005, 4804, 1367, 23, 88, "Message"],
Cell[226375, 4829, 469, 10, 21, "Message"],
Cell[226847, 4841, 533, 11, 21, "Message"],
Cell[227383, 4854, 1380, 23, 77, "Message"],
Cell[228766, 4879, 535, 11, 21, "Message"],
Cell[229304, 4892, 449, 10, 40, "Message"],
Cell[229756, 4904, 449, 10, 40, "Message"],
Cell[230208, 4916, 423, 9, 21, "Message"],
Cell[230634, 4927, 500, 10, 39, "Message"],
Cell[231137, 4939, 506, 10, 21, "Message"],
Cell[231646, 4951, 449, 10, 21, "Message"],
Cell[232098, 4963, 1305, 22, 66, "Message"],
Cell[233406, 4987, 469, 10, 21, "Message"],
Cell[233878, 4999, 1367, 23, 88, "Message"],
Cell[235248, 5024, 469, 10, 21, "Message"],
Cell[235720, 5036, 533, 11, 21, "Message"],
Cell[236256, 5049, 1380, 23, 77, "Message"],
Cell[237639, 5074, 535, 11, 21, "Message"],
Cell[238177, 5087, 449, 10, 40, "Message"],
Cell[238629, 5099, 449, 10, 40, "Message"],
Cell[239081, 5111, 423, 9, 21, "Message"],
Cell[239507, 5122, 500, 10, 39, "Message"],
Cell[240010, 5134, 506, 10, 21, "Message"],
Cell[240519, 5146, 447, 10, 21, "Message"],
Cell[240969, 5158, 1303, 22, 66, "Message"],
Cell[242275, 5182, 467, 10, 21, "Message"],
Cell[242745, 5194, 1365, 23, 88, "Message"],
Cell[244113, 5219, 467, 10, 21, "Message"],
Cell[244583, 5231, 531, 11, 21, "Message"],
Cell[245117, 5244, 1378, 23, 77, "Message"],
Cell[246498, 5269, 535, 11, 21, "Message"],
Cell[247036, 5282, 449, 10, 40, "Message"],
Cell[247488, 5294, 449, 10, 40, "Message"],
Cell[247940, 5306, 423, 9, 21, "Message"],
Cell[248366, 5317, 500, 10, 39, "Message"],
Cell[248869, 5329, 506, 10, 21, "Message"],
Cell[249378, 5341, 447, 10, 21, "Message"],
Cell[249828, 5353, 1303, 22, 66, "Message"],
Cell[251134, 5377, 469, 10, 21, "Message"],
Cell[251606, 5389, 1367, 23, 88, "Message"],
Cell[252976, 5414, 469, 10, 21, "Message"],
Cell[253448, 5426, 533, 11, 21, "Message"],
Cell[253984, 5439, 1380, 23, 77, "Message"],
Cell[255367, 5464, 535, 11, 21, "Message"],
Cell[255905, 5477, 449, 10, 40, "Message"],
Cell[256357, 5489, 447, 10, 40, "Message"],
Cell[256807, 5501, 421, 9, 21, "Message"],
Cell[257231, 5512, 498, 10, 39, "Message"],
Cell[257732, 5524, 504, 10, 21, "Message"],
Cell[258239, 5536, 449, 10, 21, "Message"],
Cell[258691, 5548, 1305, 22, 66, "Message"],
Cell[259999, 5572, 469, 10, 21, "Message"],
Cell[260471, 5584, 1367, 23, 88, "Message"],
Cell[261841, 5609, 469, 10, 21, "Message"],
Cell[262313, 5621, 533, 11, 21, "Message"],
Cell[262849, 5634, 1380, 23, 77, "Message"],
Cell[264232, 5659, 535, 11, 21, "Message"],
Cell[264770, 5672, 447, 10, 40, "Message"],
Cell[265220, 5684, 447, 10, 40, "Message"],
Cell[265670, 5696, 423, 9, 21, "Message"],
Cell[266096, 5707, 500, 10, 39, "Message"],
Cell[266599, 5719, 506, 10, 21, "Message"],
Cell[267108, 5731, 449, 10, 21, "Message"],
Cell[267560, 5743, 1305, 22, 66, "Message"],
Cell[268868, 5767, 469, 10, 21, "Message"],
Cell[269340, 5779, 1367, 23, 88, "Message"],
Cell[270710, 5804, 469, 10, 21, "Message"],
Cell[271182, 5816, 533, 11, 21, "Message"],
Cell[271718, 5829, 1380, 23, 77, "Message"],
Cell[273101, 5854, 535, 11, 21, "Message"],
Cell[273639, 5867, 449, 10, 40, "Message"],
Cell[274091, 5879, 449, 10, 40, "Message"],
Cell[274543, 5891, 423, 9, 21, "Message"],
Cell[274969, 5902, 500, 10, 39, "Message"],
Cell[275472, 5914, 506, 10, 21, "Message"],
Cell[275981, 5926, 447, 10, 21, "Message"],
Cell[276431, 5938, 1303, 22, 66, "Message"],
Cell[277737, 5962, 467, 10, 21, "Message"],
Cell[278207, 5974, 1365, 23, 88, "Message"],
Cell[279575, 5999, 469, 10, 21, "Message"],
Cell[280047, 6011, 533, 11, 21, "Message"],
Cell[280583, 6024, 1380, 23, 77, "Message"],
Cell[281966, 6049, 535, 11, 21, "Message"],
Cell[282504, 6062, 449, 10, 40, "Message"],
Cell[282956, 6074, 449, 10, 40, "Message"],
Cell[283408, 6086, 423, 9, 21, "Message"],
Cell[283834, 6097, 500, 10, 39, "Message"],
Cell[284337, 6109, 506, 10, 21, "Message"],
Cell[284846, 6121, 447, 10, 21, "Message"],
Cell[285296, 6133, 1303, 22, 66, "Message"],
Cell[286602, 6157, 469, 10, 21, "Message"],
Cell[287074, 6169, 1367, 23, 88, "Message"],
Cell[288444, 6194, 469, 10, 21, "Message"],
Cell[288916, 6206, 533, 11, 21, "Message"],
Cell[289452, 6219, 1380, 23, 77, "Message"],
Cell[290835, 6244, 535, 11, 21, "Message"],
Cell[291373, 6257, 449, 10, 40, "Message"],
Cell[291825, 6269, 447, 10, 40, "Message"],
Cell[292275, 6281, 421, 9, 21, "Message"],
Cell[292699, 6292, 498, 10, 39, "Message"],
Cell[293200, 6304, 504, 10, 21, "Message"],
Cell[293707, 6316, 449, 10, 21, "Message"],
Cell[294159, 6328, 1305, 22, 66, "Message"],
Cell[295467, 6352, 469, 10, 21, "Message"],
Cell[295939, 6364, 1367, 23, 88, "Message"],
Cell[297309, 6389, 469, 10, 21, "Message"],
Cell[297781, 6401, 533, 11, 21, "Message"],
Cell[298317, 6414, 1380, 23, 77, "Message"],
Cell[299700, 6439, 535, 11, 21, "Message"],
Cell[300238, 6452, 449, 10, 40, "Message"],
Cell[300690, 6464, 449, 10, 40, "Message"],
Cell[301142, 6476, 423, 9, 21, "Message"],
Cell[301568, 6487, 500, 10, 39, "Message"],
Cell[302071, 6499, 506, 10, 21, "Message"],
Cell[302580, 6511, 449, 10, 21, "Message"],
Cell[303032, 6523, 1305, 22, 66, "Message"],
Cell[304340, 6547, 469, 10, 21, "Message"],
Cell[304812, 6559, 1367, 23, 88, "Message"],
Cell[306182, 6584, 469, 10, 21, "Message"],
Cell[306654, 6596, 533, 11, 21, "Message"],
Cell[307190, 6609, 1380, 23, 77, "Message"],
Cell[308573, 6634, 535, 11, 21, "Message"],
Cell[309111, 6647, 449, 10, 40, "Message"],
Cell[309563, 6659, 449, 10, 40, "Message"],
Cell[310015, 6671, 423, 9, 21, "Message"],
Cell[310441, 6682, 500, 10, 39, "Message"],
Cell[310944, 6694, 506, 10, 21, "Message"],
Cell[311453, 6706, 449, 10, 21, "Message"],
Cell[311905, 6718, 1305, 22, 66, "Message"],
Cell[313213, 6742, 469, 10, 21, "Message"],
Cell[313685, 6754, 1365, 23, 88, "Message"],
Cell[315053, 6779, 467, 10, 21, "Message"],
Cell[315523, 6791, 531, 11, 21, "Message"],
Cell[316057, 6804, 1378, 23, 77, "Message"],
Cell[317438, 6829, 533, 11, 21, "Message"],
Cell[317974, 6842, 449, 10, 40, "Message"],
Cell[318426, 6854, 449, 10, 40, "Message"],
Cell[318878, 6866, 423, 9, 21, "Message"],
Cell[319304, 6877, 500, 10, 39, "Message"],
Cell[319807, 6889, 506, 10, 21, "Message"],
Cell[320316, 6901, 447, 10, 21, "Message"],
Cell[320766, 6913, 1303, 22, 66, "Message"],
Cell[322072, 6937, 467, 10, 21, "Message"],
Cell[322542, 6949, 1365, 23, 88, "Message"],
Cell[323910, 6974, 469, 10, 21, "Message"],
Cell[324382, 6986, 533, 11, 21, "Message"],
Cell[324918, 6999, 1380, 23, 77, "Message"],
Cell[326301, 7024, 535, 11, 21, "Message"],
Cell[326839, 7037, 449, 10, 40, "Message"],
Cell[327291, 7049, 449, 10, 40, "Message"],
Cell[327743, 7061, 423, 9, 21, "Message"],
Cell[328169, 7072, 500, 10, 39, "Message"],
Cell[328672, 7084, 506, 10, 21, "Message"],
Cell[329181, 7096, 447, 10, 21, "Message"],
Cell[329631, 7108, 1303, 22, 66, "Message"],
Cell[330937, 7132, 467, 10, 21, "Message"],
Cell[331407, 7144, 1365, 23, 88, "Message"],
Cell[332775, 7169, 469, 10, 21, "Message"],
Cell[333247, 7181, 533, 11, 21, "Message"],
Cell[333783, 7194, 1380, 23, 77, "Message"],
Cell[335166, 7219, 535, 11, 21, "Message"],
Cell[335704, 7232, 447, 10, 40, "Message"],
Cell[336154, 7244, 447, 10, 40, "Message"],
Cell[336604, 7256, 423, 9, 21, "Message"],
Cell[337030, 7267, 500, 10, 39, "Message"],
Cell[337533, 7279, 506, 10, 21, "Message"],
Cell[338042, 7291, 449, 10, 21, "Message"],
Cell[338494, 7303, 1305, 22, 66, "Message"],
Cell[339802, 7327, 469, 10, 21, "Message"],
Cell[340274, 7339, 1367, 23, 88, "Message"],
Cell[341644, 7364, 469, 10, 21, "Message"],
Cell[342116, 7376, 533, 11, 21, "Message"],
Cell[342652, 7389, 1380, 23, 77, "Message"],
Cell[344035, 7414, 535, 11, 21, "Message"],
Cell[344573, 7427, 449, 10, 40, "Message"],
Cell[345025, 7439, 449, 10, 40, "Message"],
Cell[345477, 7451, 423, 9, 21, "Message"],
Cell[345903, 7462, 500, 10, 39, "Message"],
Cell[346406, 7474, 506, 10, 21, "Message"],
Cell[346915, 7486, 449, 10, 21, "Message"],
Cell[347367, 7498, 1305, 22, 66, "Message"],
Cell[348675, 7522, 469, 10, 21, "Message"],
Cell[349147, 7534, 1367, 23, 88, "Message"],
Cell[350517, 7559, 469, 10, 21, "Message"],
Cell[350989, 7571, 533, 11, 21, "Message"],
Cell[351525, 7584, 1380, 23, 77, "Message"],
Cell[352908, 7609, 535, 11, 21, "Message"],
Cell[353446, 7622, 449, 10, 40, "Message"],
Cell[353898, 7634, 449, 10, 40, "Message"],
Cell[354350, 7646, 423, 9, 21, "Message"],
Cell[354776, 7657, 500, 10, 39, "Message"],
Cell[355279, 7669, 506, 10, 21, "Message"],
Cell[355788, 7681, 449, 10, 21, "Message"],
Cell[356240, 7693, 1305, 22, 66, "Message"],
Cell[357548, 7717, 469, 10, 21, "Message"],
Cell[358020, 7729, 1367, 23, 88, "Message"],
Cell[359390, 7754, 469, 10, 21, "Message"],
Cell[359862, 7766, 533, 11, 21, "Message"],
Cell[360398, 7779, 1380, 23, 77, "Message"],
Cell[361781, 7804, 535, 11, 21, "Message"],
Cell[362319, 7817, 449, 10, 40, "Message"],
Cell[362771, 7829, 449, 10, 40, "Message"],
Cell[363223, 7841, 423, 9, 21, "Message"],
Cell[363649, 7852, 500, 10, 39, "Message"],
Cell[364152, 7864, 506, 10, 21, "Message"],
Cell[364661, 7876, 447, 10, 21, "Message"],
Cell[365111, 7888, 1303, 22, 66, "Message"],
Cell[366417, 7912, 467, 10, 21, "Message"],
Cell[366887, 7924, 1365, 23, 88, "Message"],
Cell[368255, 7949, 469, 10, 21, "Message"],
Cell[368727, 7961, 533, 11, 21, "Message"],
Cell[369263, 7974, 1380, 23, 77, "Message"],
Cell[370646, 7999, 535, 11, 21, "Message"],
Cell[371184, 8012, 447, 10, 40, "Message"],
Cell[371634, 8024, 447, 10, 40, "Message"],
Cell[372084, 8036, 423, 9, 21, "Message"],
Cell[372510, 8047, 500, 10, 39, "Message"],
Cell[373013, 8059, 506, 10, 21, "Message"],
Cell[373522, 8071, 449, 10, 21, "Message"],
Cell[373974, 8083, 1305, 22, 66, "Message"],
Cell[375282, 8107, 469, 10, 21, "Message"],
Cell[375754, 8119, 1367, 23, 88, "Message"],
Cell[377124, 8144, 469, 10, 21, "Message"],
Cell[377596, 8156, 533, 11, 21, "Message"],
Cell[378132, 8169, 1380, 23, 77, "Message"],
Cell[379515, 8194, 535, 11, 21, "Message"],
Cell[380053, 8207, 449, 10, 40, "Message"],
Cell[380505, 8219, 449, 10, 40, "Message"],
Cell[380957, 8231, 423, 9, 21, "Message"],
Cell[381383, 8242, 500, 10, 39, "Message"],
Cell[381886, 8254, 506, 10, 21, "Message"],
Cell[382395, 8266, 449, 10, 21, "Message"],
Cell[382847, 8278, 1305, 22, 66, "Message"],
Cell[384155, 8302, 469, 10, 21, "Message"],
Cell[384627, 8314, 1367, 23, 88, "Message"],
Cell[385997, 8339, 469, 10, 21, "Message"],
Cell[386469, 8351, 533, 11, 21, "Message"],
Cell[387005, 8364, 1380, 23, 77, "Message"],
Cell[388388, 8389, 535, 11, 21, "Message"],
Cell[388926, 8402, 449, 10, 40, "Message"],
Cell[389378, 8414, 449, 10, 40, "Message"],
Cell[389830, 8426, 423, 9, 21, "Message"],
Cell[390256, 8437, 500, 10, 39, "Message"],
Cell[390759, 8449, 506, 10, 21, "Message"],
Cell[391268, 8461, 449, 10, 21, "Message"],
Cell[391720, 8473, 1305, 22, 66, "Message"],
Cell[393028, 8497, 469, 10, 21, "Message"],
Cell[393500, 8509, 1367, 23, 88, "Message"],
Cell[394870, 8534, 469, 10, 21, "Message"],
Cell[395342, 8546, 533, 11, 21, "Message"],
Cell[395878, 8559, 1380, 23, 77, "Message"],
Cell[397261, 8584, 535, 11, 21, "Message"],
Cell[397799, 8597, 447, 10, 40, "Message"],
Cell[398249, 8609, 447, 10, 40, "Message"],
Cell[398699, 8621, 421, 9, 21, "Message"],
Cell[399123, 8632, 498, 10, 39, "Message"],
Cell[399624, 8644, 504, 10, 21, "Message"],
Cell[400131, 8656, 449, 10, 21, "Message"],
Cell[400583, 8668, 1305, 22, 66, "Message"],
Cell[401891, 8692, 469, 10, 21, "Message"],
Cell[402363, 8704, 1367, 23, 88, "Message"],
Cell[403733, 8729, 469, 10, 21, "Message"],
Cell[404205, 8741, 533, 11, 21, "Message"],
Cell[404741, 8754, 1380, 23, 77, "Message"],
Cell[406124, 8779, 535, 11, 21, "Message"],
Cell[406662, 8792, 449, 10, 40, "Message"],
Cell[407114, 8804, 449, 10, 40, "Message"],
Cell[407566, 8816, 423, 9, 21, "Message"],
Cell[407992, 8827, 500, 10, 39, "Message"],
Cell[408495, 8839, 506, 10, 21, "Message"],
Cell[409004, 8851, 447, 10, 21, "Message"],
Cell[409454, 8863, 1303, 22, 66, "Message"],
Cell[410760, 8887, 467, 10, 21, "Message"],
Cell[411230, 8899, 1365, 23, 88, "Message"],
Cell[412598, 8924, 467, 10, 21, "Message"],
Cell[413068, 8936, 531, 11, 21, "Message"],
Cell[413602, 8949, 1378, 23, 77, "Message"],
Cell[414983, 8974, 533, 11, 21, "Message"],
Cell[415519, 8987, 449, 10, 40, "Message"],
Cell[415971, 8999, 447, 10, 40, "Message"],
Cell[416421, 9011, 421, 9, 21, "Message"],
Cell[416845, 9022, 498, 10, 39, "Message"],
Cell[417346, 9034, 504, 10, 21, "Message"],
Cell[417853, 9046, 449, 10, 21, "Message"],
Cell[418305, 9058, 1305, 22, 66, "Message"],
Cell[419613, 9082, 469, 10, 21, "Message"],
Cell[420085, 9094, 1367, 23, 88, "Message"],
Cell[421455, 9119, 469, 10, 21, "Message"],
Cell[421927, 9131, 533, 11, 21, "Message"],
Cell[422463, 9144, 1380, 23, 77, "Message"],
Cell[423846, 9169, 535, 11, 21, "Message"],
Cell[424384, 9182, 449, 10, 40, "Message"],
Cell[424836, 9194, 449, 10, 40, "Message"],
Cell[425288, 9206, 423, 9, 21, "Message"],
Cell[425714, 9217, 500, 10, 39, "Message"],
Cell[426217, 9229, 506, 10, 21, "Message"],
Cell[426726, 9241, 447, 10, 21, "Message"],
Cell[427176, 9253, 1303, 22, 66, "Message"],
Cell[428482, 9277, 467, 10, 21, "Message"],
Cell[428952, 9289, 1365, 23, 88, "Message"],
Cell[430320, 9314, 467, 10, 21, "Message"],
Cell[430790, 9326, 531, 11, 21, "Message"],
Cell[431324, 9339, 1378, 23, 77, "Message"],
Cell[432705, 9364, 533, 11, 21, "Message"],
Cell[433241, 9377, 449, 10, 40, "Message"],
Cell[433693, 9389, 449, 10, 40, "Message"],
Cell[434145, 9401, 423, 9, 21, "Message"],
Cell[434571, 9412, 500, 10, 39, "Message"],
Cell[435074, 9424, 506, 10, 21, "Message"],
Cell[435583, 9436, 449, 10, 21, "Message"],
Cell[436035, 9448, 1305, 22, 66, "Message"],
Cell[437343, 9472, 469, 10, 21, "Message"],
Cell[437815, 9484, 1367, 23, 88, "Message"],
Cell[439185, 9509, 469, 10, 21, "Message"],
Cell[439657, 9521, 533, 11, 21, "Message"],
Cell[440193, 9534, 1380, 23, 77, "Message"],
Cell[441576, 9559, 535, 11, 21, "Message"],
Cell[442114, 9572, 449, 10, 40, "Message"],
Cell[442566, 9584, 449, 10, 40, "Message"],
Cell[443018, 9596, 423, 9, 21, "Message"],
Cell[443444, 9607, 500, 10, 39, "Message"],
Cell[443947, 9619, 506, 10, 21, "Message"],
Cell[444456, 9631, 449, 10, 21, "Message"],
Cell[444908, 9643, 1305, 22, 66, "Message"],
Cell[446216, 9667, 469, 10, 21, "Message"],
Cell[446688, 9679, 1367, 23, 88, "Message"],
Cell[448058, 9704, 469, 10, 21, "Message"],
Cell[448530, 9716, 533, 11, 21, "Message"],
Cell[449066, 9729, 1378, 23, 77, "Message"],
Cell[450447, 9754, 533, 11, 21, "Message"],
Cell[450983, 9767, 447, 10, 40, "Message"],
Cell[451433, 9779, 447, 10, 40, "Message"],
Cell[451883, 9791, 421, 9, 21, "Message"],
Cell[452307, 9802, 498, 10, 39, "Message"],
Cell[452808, 9814, 504, 10, 21, "Message"],
Cell[453315, 9826, 449, 10, 21, "Message"],
Cell[453767, 9838, 1305, 22, 66, "Message"],
Cell[455075, 9862, 469, 10, 21, "Message"],
Cell[455547, 9874, 1367, 23, 88, "Message"],
Cell[456917, 9899, 469, 10, 21, "Message"],
Cell[457389, 9911, 533, 11, 21, "Message"],
Cell[457925, 9924, 1380, 23, 77, "Message"],
Cell[459308, 9949, 535, 11, 21, "Message"],
Cell[459846, 9962, 449, 10, 40, "Message"],
Cell[460298, 9974, 449, 10, 40, "Message"],
Cell[460750, 9986, 423, 9, 21, "Message"],
Cell[461176, 9997, 500, 10, 39, "Message"],
Cell[461679, 10009, 506, 10, 21, "Message"],
Cell[462188, 10021, 449, 10, 21, "Message"],
Cell[462640, 10033, 1305, 22, 66, "Message"],
Cell[463948, 10057, 469, 10, 21, "Message"],
Cell[464420, 10069, 1367, 23, 88, "Message"],
Cell[465790, 10094, 469, 10, 21, "Message"],
Cell[466262, 10106, 533, 11, 21, "Message"],
Cell[466798, 10119, 1380, 23, 77, "Message"],
Cell[468181, 10144, 535, 11, 21, "Message"],
Cell[468719, 10157, 447, 10, 40, "Message"],
Cell[469169, 10169, 447, 10, 40, "Message"],
Cell[469619, 10181, 421, 9, 21, "Message"],
Cell[470043, 10192, 498, 10, 39, "Message"],
Cell[470544, 10204, 504, 10, 21, "Message"],
Cell[471051, 10216, 449, 10, 21, "Message"],
Cell[471503, 10228, 1305, 22, 66, "Message"],
Cell[472811, 10252, 469, 10, 21, "Message"],
Cell[473283, 10264, 1367, 23, 88, "Message"],
Cell[474653, 10289, 469, 10, 21, "Message"],
Cell[475125, 10301, 533, 11, 21, "Message"],
Cell[475661, 10314, 1380, 23, 77, "Message"],
Cell[477044, 10339, 535, 11, 21, "Message"],
Cell[477582, 10352, 449, 10, 40, "Message"],
Cell[478034, 10364, 449, 10, 40, "Message"],
Cell[478486, 10376, 423, 9, 21, "Message"],
Cell[478912, 10387, 500, 10, 39, "Message"],
Cell[479415, 10399, 506, 10, 21, "Message"],
Cell[479924, 10411, 449, 10, 21, "Message"],
Cell[480376, 10423, 1305, 22, 66, "Message"],
Cell[481684, 10447, 469, 10, 21, "Message"],
Cell[482156, 10459, 1367, 23, 88, "Message"],
Cell[483526, 10484, 469, 10, 21, "Message"],
Cell[483998, 10496, 533, 11, 21, "Message"],
Cell[484534, 10509, 1380, 23, 77, "Message"],
Cell[485917, 10534, 535, 11, 21, "Message"],
Cell[486455, 10547, 449, 10, 40, "Message"],
Cell[486907, 10559, 447, 10, 40, "Message"],
Cell[487357, 10571, 421, 9, 21, "Message"],
Cell[487781, 10582, 498, 10, 39, "Message"],
Cell[488282, 10594, 504, 10, 21, "Message"],
Cell[488789, 10606, 449, 10, 21, "Message"],
Cell[489241, 10618, 1305, 22, 66, "Message"],
Cell[490549, 10642, 469, 10, 21, "Message"],
Cell[491021, 10654, 1367, 23, 88, "Message"],
Cell[492391, 10679, 469, 10, 21, "Message"],
Cell[492863, 10691, 533, 11, 21, "Message"],
Cell[493399, 10704, 1380, 23, 77, "Message"],
Cell[494782, 10729, 535, 11, 21, "Message"],
Cell[495320, 10742, 447, 10, 40, "Message"],
Cell[495770, 10754, 449, 10, 40, "Message"],
Cell[496222, 10766, 423, 9, 21, "Message"],
Cell[496648, 10777, 500, 10, 39, "Message"],
Cell[497151, 10789, 506, 10, 21, "Message"],
Cell[497660, 10801, 449, 10, 21, "Message"],
Cell[498112, 10813, 1305, 22, 66, "Message"],
Cell[499420, 10837, 469, 10, 21, "Message"],
Cell[499892, 10849, 1367, 23, 88, "Message"],
Cell[501262, 10874, 469, 10, 21, "Message"],
Cell[501734, 10886, 533, 11, 21, "Message"],
Cell[502270, 10899, 1380, 23, 77, "Message"],
Cell[503653, 10924, 535, 11, 21, "Message"],
Cell[504191, 10937, 449, 10, 40, "Message"],
Cell[504643, 10949, 449, 10, 40, "Message"],
Cell[505095, 10961, 423, 9, 21, "Message"],
Cell[505521, 10972, 500, 10, 39, "Message"],
Cell[506024, 10984, 506, 10, 21, "Message"],
Cell[506533, 10996, 447, 10, 21, "Message"],
Cell[506983, 11008, 1303, 22, 66, "Message"],
Cell[508289, 11032, 467, 10, 21, "Message"],
Cell[508759, 11044, 1367, 23, 88, "Message"],
Cell[510129, 11069, 469, 10, 21, "Message"],
Cell[510601, 11081, 533, 11, 21, "Message"],
Cell[511137, 11094, 1380, 23, 77, "Message"],
Cell[512520, 11119, 535, 11, 21, "Message"],
Cell[513058, 11132, 449, 10, 40, "Message"],
Cell[513510, 11144, 449, 10, 40, "Message"],
Cell[513962, 11156, 423, 9, 21, "Message"],
Cell[514388, 11167, 500, 10, 39, "Message"],
Cell[514891, 11179, 506, 10, 21, "Message"],
Cell[515400, 11191, 449, 10, 21, "Message"],
Cell[515852, 11203, 1305, 22, 66, "Message"],
Cell[517160, 11227, 469, 10, 21, "Message"],
Cell[517632, 11239, 1367, 23, 88, "Message"],
Cell[519002, 11264, 469, 10, 21, "Message"],
Cell[519474, 11276, 533, 11, 21, "Message"],
Cell[520010, 11289, 1380, 23, 77, "Message"],
Cell[521393, 11314, 535, 11, 21, "Message"],
Cell[521931, 11327, 449, 10, 40, "Message"],
Cell[522383, 11339, 449, 10, 40, "Message"],
Cell[522835, 11351, 423, 9, 21, "Message"],
Cell[523261, 11362, 500, 10, 39, "Message"],
Cell[523764, 11374, 506, 10, 21, "Message"],
Cell[524273, 11386, 449, 10, 21, "Message"],
Cell[524725, 11398, 1305, 22, 66, "Message"],
Cell[526033, 11422, 469, 10, 21, "Message"],
Cell[526505, 11434, 1367, 23, 88, "Message"],
Cell[527875, 11459, 469, 10, 21, "Message"],
Cell[528347, 11471, 533, 11, 21, "Message"],
Cell[528883, 11484, 1380, 23, 77, "Message"],
Cell[530266, 11509, 535, 11, 21, "Message"],
Cell[530804, 11522, 449, 10, 40, "Message"],
Cell[531256, 11534, 449, 10, 40, "Message"],
Cell[531708, 11546, 423, 9, 21, "Message"],
Cell[532134, 11557, 500, 10, 39, "Message"],
Cell[532637, 11569, 506, 10, 21, "Message"],
Cell[533146, 11581, 449, 10, 21, "Message"],
Cell[533598, 11593, 1305, 22, 66, "Message"],
Cell[534906, 11617, 469, 10, 21, "Message"],
Cell[535378, 11629, 1367, 23, 88, "Message"],
Cell[536748, 11654, 469, 10, 21, "Message"],
Cell[537220, 11666, 533, 11, 21, "Message"],
Cell[537756, 11679, 1380, 23, 77, "Message"],
Cell[539139, 11704, 535, 11, 21, "Message"],
Cell[539677, 11717, 449, 10, 40, "Message"],
Cell[540129, 11729, 449, 10, 40, "Message"],
Cell[540581, 11741, 423, 9, 21, "Message"],
Cell[541007, 11752, 500, 10, 39, "Message"],
Cell[541510, 11764, 506, 10, 21, "Message"],
Cell[542019, 11776, 447, 10, 21, "Message"],
Cell[542469, 11788, 1303, 22, 66, "Message"],
Cell[543775, 11812, 469, 10, 21, "Message"],
Cell[544247, 11824, 1367, 23, 88, "Message"],
Cell[545617, 11849, 469, 10, 21, "Message"],
Cell[546089, 11861, 533, 11, 21, "Message"],
Cell[546625, 11874, 1380, 23, 77, "Message"],
Cell[548008, 11899, 535, 11, 21, "Message"],
Cell[548546, 11912, 449, 10, 40, "Message"],
Cell[548998, 11924, 449, 10, 40, "Message"],
Cell[549450, 11936, 423, 9, 21, "Message"],
Cell[549876, 11947, 500, 10, 39, "Message"],
Cell[550379, 11959, 506, 10, 21, "Message"],
Cell[550888, 11971, 447, 10, 21, "Message"],
Cell[551338, 11983, 1303, 22, 66, "Message"],
Cell[552644, 12007, 467, 10, 21, "Message"],
Cell[553114, 12019, 1365, 23, 88, "Message"],
Cell[554482, 12044, 469, 10, 21, "Message"],
Cell[554954, 12056, 533, 11, 21, "Message"],
Cell[555490, 12069, 1380, 23, 77, "Message"],
Cell[556873, 12094, 535, 11, 21, "Message"],
Cell[557411, 12107, 447, 10, 40, "Message"],
Cell[557861, 12119, 447, 10, 40, "Message"],
Cell[558311, 12131, 421, 9, 21, "Message"],
Cell[558735, 12142, 498, 10, 39, "Message"],
Cell[559236, 12154, 504, 10, 21, "Message"],
Cell[559743, 12166, 449, 10, 21, "Message"],
Cell[560195, 12178, 1305, 22, 66, "Message"],
Cell[561503, 12202, 469, 10, 21, "Message"],
Cell[561975, 12214, 1367, 23, 88, "Message"],
Cell[563345, 12239, 469, 10, 21, "Message"],
Cell[563817, 12251, 533, 11, 21, "Message"],
Cell[564353, 12264, 1380, 23, 77, "Message"],
Cell[565736, 12289, 535, 11, 21, "Message"],
Cell[566274, 12302, 449, 10, 40, "Message"],
Cell[566726, 12314, 449, 10, 40, "Message"],
Cell[567178, 12326, 423, 9, 21, "Message"],
Cell[567604, 12337, 500, 10, 39, "Message"],
Cell[568107, 12349, 506, 10, 21, "Message"],
Cell[568616, 12361, 449, 10, 21, "Message"],
Cell[569068, 12373, 1305, 22, 66, "Message"],
Cell[570376, 12397, 469, 10, 21, "Message"],
Cell[570848, 12409, 1367, 23, 88, "Message"],
Cell[572218, 12434, 469, 10, 21, "Message"],
Cell[572690, 12446, 533, 11, 21, "Message"],
Cell[573226, 12459, 1380, 23, 77, "Message"],
Cell[574609, 12484, 535, 11, 21, "Message"],
Cell[575147, 12497, 449, 10, 40, "Message"],
Cell[575599, 12509, 449, 10, 40, "Message"],
Cell[576051, 12521, 423, 9, 21, "Message"],
Cell[576477, 12532, 500, 10, 39, "Message"],
Cell[576980, 12544, 506, 10, 21, "Message"],
Cell[577489, 12556, 449, 10, 21, "Message"],
Cell[577941, 12568, 1305, 22, 66, "Message"],
Cell[579249, 12592, 469, 10, 21, "Message"],
Cell[579721, 12604, 1367, 23, 88, "Message"],
Cell[581091, 12629, 469, 10, 21, "Message"],
Cell[581563, 12641, 533, 11, 21, "Message"],
Cell[582099, 12654, 1380, 23, 77, "Message"],
Cell[583482, 12679, 535, 11, 21, "Message"],
Cell[584020, 12692, 449, 10, 40, "Message"],
Cell[584472, 12704, 449, 10, 40, "Message"],
Cell[584924, 12716, 423, 9, 21, "Message"],
Cell[585350, 12727, 500, 10, 39, "Message"],
Cell[585853, 12739, 506, 10, 21, "Message"],
Cell[586362, 12751, 449, 10, 21, "Message"],
Cell[586814, 12763, 1303, 22, 66, "Message"],
Cell[588120, 12787, 467, 10, 21, "Message"],
Cell[588590, 12799, 1365, 23, 88, "Message"],
Cell[589958, 12824, 467, 10, 21, "Message"],
Cell[590428, 12836, 531, 11, 21, "Message"],
Cell[590962, 12849, 1378, 23, 77, "Message"],
Cell[592343, 12874, 533, 11, 21, "Message"],
Cell[592879, 12887, 447, 10, 40, "Message"],
Cell[593329, 12899, 447, 10, 40, "Message"],
Cell[593779, 12911, 421, 9, 21, "Message"],
Cell[594203, 12922, 498, 10, 39, "Message"],
Cell[594704, 12934, 504, 10, 21, "Message"],
Cell[595211, 12946, 449, 10, 21, "Message"],
Cell[595663, 12958, 1305, 22, 66, "Message"],
Cell[596971, 12982, 469, 10, 21, "Message"],
Cell[597443, 12994, 1367, 23, 88, "Message"],
Cell[598813, 13019, 469, 10, 21, "Message"],
Cell[599285, 13031, 533, 11, 21, "Message"],
Cell[599821, 13044, 1380, 23, 77, "Message"],
Cell[601204, 13069, 535, 11, 21, "Message"],
Cell[601742, 13082, 449, 10, 40, "Message"],
Cell[602194, 13094, 449, 10, 40, "Message"],
Cell[602646, 13106, 423, 9, 21, "Message"],
Cell[603072, 13117, 500, 10, 39, "Message"],
Cell[603575, 13129, 506, 10, 21, "Message"],
Cell[604084, 13141, 449, 10, 21, "Message"],
Cell[604536, 13153, 1305, 22, 66, "Message"],
Cell[605844, 13177, 469, 10, 21, "Message"],
Cell[606316, 13189, 1367, 23, 88, "Message"],
Cell[607686, 13214, 469, 10, 21, "Message"],
Cell[608158, 13226, 533, 11, 21, "Message"],
Cell[608694, 13239, 1380, 23, 77, "Message"],
Cell[610077, 13264, 535, 11, 21, "Message"],
Cell[610615, 13277, 449, 10, 40, "Message"],
Cell[611067, 13289, 449, 10, 40, "Message"],
Cell[611519, 13301, 423, 9, 21, "Message"],
Cell[611945, 13312, 500, 10, 39, "Message"],
Cell[612448, 13324, 506, 10, 21, "Message"],
Cell[612957, 13336, 449, 10, 21, "Message"],
Cell[613409, 13348, 1305, 22, 66, "Message"],
Cell[614717, 13372, 469, 10, 21, "Message"],
Cell[615189, 13384, 1367, 23, 88, "Message"],
Cell[616559, 13409, 469, 10, 21, "Message"],
Cell[617031, 13421, 533, 11, 21, "Message"],
Cell[617567, 13434, 1380, 23, 77, "Message"],
Cell[618950, 13459, 535, 11, 21, "Message"],
Cell[619488, 13472, 449, 10, 40, "Message"],
Cell[619940, 13484, 449, 10, 40, "Message"],
Cell[620392, 13496, 423, 9, 21, "Message"],
Cell[620818, 13507, 500, 10, 39, "Message"],
Cell[621321, 13519, 506, 10, 21, "Message"],
Cell[621830, 13531, 449, 10, 21, "Message"],
Cell[622282, 13543, 1305, 22, 66, "Message"],
Cell[623590, 13567, 467, 10, 21, "Message"],
Cell[624060, 13579, 1365, 23, 88, "Message"],
Cell[625428, 13604, 467, 10, 21, "Message"],
Cell[625898, 13616, 531, 11, 21, "Message"],
Cell[626432, 13629, 1378, 23, 77, "Message"],
Cell[627813, 13654, 533, 11, 21, "Message"],
Cell[628349, 13667, 447, 10, 40, "Message"],
Cell[628799, 13679, 447, 10, 40, "Message"],
Cell[629249, 13691, 421, 9, 21, "Message"],
Cell[629673, 13702, 498, 10, 39, "Message"],
Cell[630174, 13714, 504, 10, 21, "Message"],
Cell[630681, 13726, 449, 10, 21, "Message"],
Cell[631133, 13738, 1305, 22, 66, "Message"],
Cell[632441, 13762, 469, 10, 21, "Message"],
Cell[632913, 13774, 1367, 23, 88, "Message"],
Cell[634283, 13799, 469, 10, 21, "Message"],
Cell[634755, 13811, 533, 11, 21, "Message"],
Cell[635291, 13824, 1380, 23, 77, "Message"],
Cell[636674, 13849, 535, 11, 21, "Message"],
Cell[637212, 13862, 449, 10, 40, "Message"],
Cell[637664, 13874, 449, 10, 40, "Message"],
Cell[638116, 13886, 423, 9, 21, "Message"],
Cell[638542, 13897, 500, 10, 39, "Message"],
Cell[639045, 13909, 506, 10, 21, "Message"],
Cell[639554, 13921, 449, 10, 21, "Message"],
Cell[640006, 13933, 1305, 22, 66, "Message"],
Cell[641314, 13957, 469, 10, 21, "Message"],
Cell[641786, 13969, 1367, 23, 88, "Message"],
Cell[643156, 13994, 469, 10, 21, "Message"],
Cell[643628, 14006, 533, 11, 21, "Message"],
Cell[644164, 14019, 1380, 23, 77, "Message"],
Cell[645547, 14044, 535, 11, 21, "Message"],
Cell[646085, 14057, 449, 10, 40, "Message"],
Cell[646537, 14069, 449, 10, 40, "Message"],
Cell[646989, 14081, 421, 9, 21, "Message"],
Cell[647413, 14092, 498, 10, 39, "Message"],
Cell[647914, 14104, 504, 10, 21, "Message"],
Cell[648421, 14116, 449, 10, 21, "Message"],
Cell[648873, 14128, 1305, 22, 66, "Message"],
Cell[650181, 14152, 469, 10, 21, "Message"],
Cell[650653, 14164, 1367, 23, 88, "Message"],
Cell[652023, 14189, 469, 10, 21, "Message"],
Cell[652495, 14201, 533, 11, 21, "Message"],
Cell[653031, 14214, 1380, 23, 77, "Message"],
Cell[654414, 14239, 535, 11, 21, "Message"],
Cell[654952, 14252, 449, 10, 40, "Message"],
Cell[655404, 14264, 449, 10, 40, "Message"],
Cell[655856, 14276, 423, 9, 21, "Message"],
Cell[656282, 14287, 500, 10, 39, "Message"],
Cell[656785, 14299, 506, 10, 21, "Message"],
Cell[657294, 14311, 449, 10, 21, "Message"],
Cell[657746, 14323, 1305, 22, 66, "Message"],
Cell[659054, 14347, 469, 10, 21, "Message"],
Cell[659526, 14359, 1367, 23, 88, "Message"],
Cell[660896, 14384, 469, 10, 21, "Message"],
Cell[661368, 14396, 533, 11, 21, "Message"],
Cell[661904, 14409, 1380, 23, 77, "Message"],
Cell[663287, 14434, 535, 11, 21, "Message"],
Cell[663825, 14447, 449, 10, 40, "Message"],
Cell[664277, 14459, 449, 10, 40, "Message"],
Cell[664729, 14471, 423, 9, 21, "Message"],
Cell[665155, 14482, 500, 10, 39, "Message"],
Cell[665658, 14494, 506, 10, 21, "Message"],
Cell[666167, 14506, 449, 10, 21, "Message"],
Cell[666619, 14518, 1305, 22, 66, "Message"],
Cell[667927, 14542, 467, 10, 21, "Message"],
Cell[668397, 14554, 1365, 23, 88, "Message"],
Cell[669765, 14579, 469, 10, 21, "Message"],
Cell[670237, 14591, 533, 11, 21, "Message"],
Cell[670773, 14604, 1378, 23, 77, "Message"],
Cell[672154, 14629, 533, 11, 21, "Message"],
Cell[672690, 14642, 449, 10, 40, "Message"],
Cell[673142, 14654, 447, 10, 40, "Message"],
Cell[673592, 14666, 423, 9, 21, "Message"],
Cell[674018, 14677, 500, 10, 39, "Message"],
Cell[674521, 14689, 504, 10, 21, "Message"],
Cell[675028, 14701, 449, 10, 21, "Message"],
Cell[675480, 14713, 1303, 22, 66, "Message"],
Cell[676786, 14737, 469, 10, 21, "Message"],
Cell[677258, 14749, 1365, 23, 88, "Message"],
Cell[678626, 14774, 469, 10, 21, "Message"],
Cell[679098, 14786, 531, 11, 21, "Message"],
Cell[679632, 14799, 1378, 23, 77, "Message"],
Cell[681013, 14824, 535, 11, 21, "Message"],
Cell[681551, 14837, 446, 10, 40, "Message"],
Cell[682000, 14849, 449, 10, 40, "Message"],
Cell[682452, 14861, 423, 9, 21, "Message"],
Cell[682878, 14872, 498, 10, 39, "Message"],
Cell[683379, 14884, 506, 10, 21, "Message"],
Cell[683888, 14896, 449, 10, 21, "Message"],
Cell[684340, 14908, 1305, 22, 66, "Message"],
Cell[685648, 14932, 467, 10, 21, "Message"],
Cell[686118, 14944, 1367, 23, 88, "Message"],
Cell[687488, 14969, 469, 10, 21, "Message"],
Cell[687960, 14981, 531, 11, 21, "Message"],
Cell[688494, 14994, 1380, 23, 77, "Message"],
Cell[689877, 15019, 533, 11, 21, "Message"],
Cell[690413, 15032, 449, 10, 40, "Message"],
Cell[690865, 15044, 447, 10, 40, "Message"],
Cell[691315, 15056, 421, 9, 21, "Message"],
Cell[691739, 15067, 498, 10, 39, "Message"],
Cell[692240, 15079, 504, 10, 21, "Message"],
Cell[692747, 15091, 449, 10, 21, "Message"],
Cell[693199, 15103, 1305, 22, 66, "Message"],
Cell[694507, 15127, 466, 10, 21, "Message"],
Cell[694976, 15139, 1364, 23, 88, "Message"],
Cell[696343, 15164, 469, 10, 21, "Message"],
Cell[696815, 15176, 533, 11, 21, "Message"],
Cell[697351, 15189, 1380, 23, 77, "Message"],
Cell[698734, 15214, 533, 11, 21, "Message"],
Cell[699270, 15227, 449, 10, 40, "Message"],
Cell[699722, 15239, 447, 10, 40, "Message"],
Cell[700172, 15251, 421, 9, 21, "Message"],
Cell[700596, 15262, 498, 10, 39, "Message"],
Cell[701097, 15274, 504, 10, 21, "Message"],
Cell[701604, 15286, 447, 10, 21, "Message"],
Cell[702054, 15298, 1303, 22, 66, "Message"],
Cell[703360, 15322, 467, 10, 21, "Message"],
Cell[703830, 15334, 1365, 23, 88, "Message"],
Cell[705198, 15359, 467, 10, 21, "Message"],
Cell[705668, 15371, 533, 11, 21, "Message"],
Cell[706204, 15384, 1380, 23, 77, "Message"],
Cell[707587, 15409, 533, 11, 21, "Message"],
Cell[708123, 15422, 447, 10, 40, "Message"],
Cell[708573, 15434, 449, 10, 40, "Message"],
Cell[709025, 15446, 423, 9, 21, "Message"],
Cell[709451, 15457, 500, 10, 39, "Message"],
Cell[709954, 15469, 506, 10, 21, "Message"],
Cell[710463, 15481, 447, 10, 21, "Message"],
Cell[710913, 15493, 1303, 22, 66, "Message"],
Cell[712219, 15517, 469, 10, 21, "Message"],
Cell[712691, 15529, 1367, 23, 88, "Message"],
Cell[714061, 15554, 467, 10, 21, "Message"],
Cell[714531, 15566, 533, 11, 21, "Message"],
Cell[715067, 15579, 1378, 23, 77, "Message"],
Cell[716448, 15604, 535, 11, 21, "Message"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
